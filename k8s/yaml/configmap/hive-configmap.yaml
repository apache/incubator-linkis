# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ConfigMap
apiVersion: v1
metadata:
  name: hive-config
data:
  hive-site.xml: |+
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
            <property>
              <name>javax.jdo.option.ConnectionURL</name>
              <value>jdbc:mysql://127.0.0.1:3306/metastore?createDatabaseIfNotExist=true&amp;useSSL=false</value>
              <description>JDBC connect string for a JDBC metastore</description>
            </property>

            <property>
              <name>javax.jdo.option.ConnectionDriverName</name>
              <value>com.mysql.jdbc.Driver</value>
              <description>Driver class name for a JDBC metastore</description>
            </property>

            <property>
              <name>javax.jdo.option.ConnectionUserName</name>
              <value>root</value>
              <description>username to use against metastore database</description>
            </property>

            <property>
              <name>javax.jdo.option.ConnectionPassword</name>
              <value>123456</value>
              <description>password to use against metastore database</description>
            </property>

    <property>
    <name>hive.metastore.warehouse.dir</name>
    <value>/user/hive/warehouse</value>
    <description>location of default database for the warehouse</description>
    </property>

    <property>
        <name>hive.metastore.schema.verification</name>
        <value>false</value>
    </property>

    <property>
            <name>hive.cli.print.header</name>
            <value>true</value>
    </property>

    <property>
            <name>hive.cli.print.current.db</name>
            <value>true</value>
    </property>

    <property>
    <name>hive.metastore.uris</name>
    <value>thrift://127.0.0.1:9083</value>
    </property>

    <property>  
      <name>hive.security.authorization.enabled</name>   
      <value>true</value>  
      <description>Enable or disable the hive client authorization</description>  
    </property>

    </configuration>
  ivysettings.xml: >
    <!--
       Licensed to the Apache Software Foundation (ASF) under one or more
       contributor license agreements.  See the NOTICE file distributed with
       this work for additional information regarding copyright ownership.
       The ASF licenses this file to You under the Apache License, Version 2.0
       (the "License"); you may not use this file except in compliance with
       the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
       -->

    <!--This file is used by grapes to download dependencies from a maven
    repository.
        This is just a template and can be edited to add more repositories.
    -->


    <ivysettings>
      <!--name of the defaultResolver should always be 'downloadGrapes'. -->
      <settings defaultResolver="downloadGrapes"/>
      <!-- Only set maven.local.repository if not already set -->
      <property name="maven.local.repository" value="${user.home}/.m2/repository" override="false" />
      <property name="m2-pattern"
                value="file:${maven.local.repository}/[organisation]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]"
                override="false"/>
      <resolvers>
        <!-- more resolvers can be added here -->
        <chain name="downloadGrapes">
          <!-- This resolver uses ibiblio to find artifacts, compatible with maven2 repository -->
          <ibiblio name="central" m2compatible="true"/>
          <url name="local-maven2" m2compatible="true">
            <artifact pattern="${m2-pattern}"/>
          </url>
          <!-- File resolver to add jars from the local system. -->
          <filesystem name="test" checkmodified="true">
            <artifact pattern="${test.tmp.dir}/[module]-[revision](-[classifier]).jar"/>
          </filesystem>

        </chain>
      </resolvers>
    </ivysettings>
  parquet-logging.properties: >
    # Licensed to the Apache Software Foundation (ASF) under one

    # or more contributor license agreements.  See the NOTICE file

    # distributed with this work for additional information

    # regarding copyright ownership.  The ASF licenses this file

    # to you under the Apache License, Version 2.0 (the

    # "License"); you may not use this file except in compliance

    # with the License.  You may obtain a copy of the License at

    #

    #     http://www.apache.org/licenses/LICENSE-2.0

    #

    # Unless required by applicable law or agreed to in writing, software

    # distributed under the License is distributed on an "AS IS" BASIS,

    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

    # See the License for the specific language governing permissions and

    # limitations under the License.


    # Properties file which configures the operation of the JDK

    # logging facility.


    # The system will look for this config file, first using

    # a System property specified at startup:

    #

    # >java -Djava.util.logging.config.file=myLoggingConfigFilePath

    #

    # If this property is not specified, then the config file is

    # retrieved from its default location at:

    #

    # JDK_HOME/jre/lib/logging.properties


    # Global logging properties.

    # ------------------------------------------

    # The set of handlers to be loaded upon startup.

    # Comma-separated list of class names.

    # (? LogManager docs say no comma here, but JDK example has comma.)

    # handlers=java.util.logging.ConsoleHandler

    org.apache.parquet.handlers= java.util.logging.FileHandler


    # Default global logging level.

    # Loggers and Handlers may override this level

    .level=INFO


    # Handlers

    # -----------------------------------------


    # --- ConsoleHandler ---

    # Override of global logging level

    java.util.logging.ConsoleHandler.level=INFO

    java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

    java.util.logging.SimpleFormatter.format=[%1$tc] %4$s: %2$s - %5$s %6$s%n


    # --- FileHandler ---

    # Override of global logging level

    java.util.logging.FileHandler.level=ALL


    # Naming style for the output file:

    # (The output file is placed in the system temporary directory.

    # %u is used to provide unique identifier for the file.

    # For more information refer

    #
    https://docs.oracle.com/javase/7/docs/api/java/util/logging/FileHandler.html)

    java.util.logging.FileHandler.pattern=%t/parquet-%u.log


    # Limiting size of output file in bytes:

    java.util.logging.FileHandler.limit=50000000


    # Number of output files to cycle through, by appending an

    # integer to the base file name:

    java.util.logging.FileHandler.count=1


    # Style of output (Simple or XML):

    java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
